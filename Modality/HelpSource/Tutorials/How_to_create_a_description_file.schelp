title:: How to create a description file
summary:: How to create a description file to use with the Modality toolkit.
categories:: Libraries>Modality
related:: Overviews/Modality, Classes/MKtl, Reference/MKtl_description_files, Classes/MIDIExplorer, Classes/HIDExplorer

Section:: Introduction

The functionality of link::Classes/MKtl:: relies on descriptions of the used devices. For some Controllers, there are already descriptions available, chances are that your device is not among them.

There are three tutorials that explain the procedure for the three different protocols. This tutorial describes elements that can be part of any description file (regardless of protocol).

list::
##link::Tutorials/How_to_create_a_description_file_for_MIDI::
##link::Tutorials/How_to_create_a_description_file_for_HID::
##link::Tutorials/How_to_create_a_description_file_for_OSC::
::

section:: Basic setup of the description file

The basic setup of the description file is that is is a Dictionary with a number of key elements.

The main element is the code::description:: which contains all the elements/controls of a device.

For physical devices, you need to define the protocol and the idInfo. The code::protocol:: is one of code::\osc, \midi, \hid::. The code::idInfo:: is different per protocol, check the respective tutorial for an elaborate description.

If you want to create a virtual device, the minimum info required is the idInfo and protocol: code::(idInfo: \something, protocol: \virtual):: and in the description, every element needs an ioType and a spec.

For example:

code::
(
m = MKtl.new( \oneButton, (
	idInfo: \oneBut,
	protocol: \virtual,
	description: ( \bt: ( type: \button, ioType: \in, \spec: \but ) );
), false );
);
m.gui;
m.free; // free m's resources and remove it from MKtl.all
::

See also: link::Reference/MKtl_description_files:: for the complete description of all possible keys.

section:: Specs

If a control of your device needs a custom Spec, then you can define this in the element code::spec:: of the device description.

For example:

code::
specs: (
	mantaTouch: [ 0, 227 ].asSpec,
	mantaSlider: [ 0, 4095 ].asSpec,
	mantaLed: ItemsSpec.new( ["off","amber","red"] ), // led can be off, amber or red
)
::

Many common specs in SC are in Spec.specs, and some specs that many MKtls share can be found in MKtl.specs:
code::
Spec.specs.keys;	// get the names
MKtl.globalSpecs.keys;
MKtl.specs.at( \hidHat ); // look up a specific one
::

section:: Grouping of elements

For multiple elements, one can make groups, which is helpful for sematinc clarity.

For example, an MKtl with 5 sliders and 4 buttons, and labeled buttons (play and stop) would look like this:

code::
(
m = MKtl.new( \sliders_knobs, (
	idInfo: \ex,
	protocol: \virtual,
	description: (
		\sl: 5.collect { ( type: \slider, ioType: \in, \spec: \midiCC ) },
		\bt: 5.collect { ( type: \button, ioType: \in, \spec: \but ) },
		\play: ( type: \button, ioType: \in, \spec: \but ),
		\stop: ( type: \button, ioType: \in, \spec: \but )
	)
), false );
);
m.gui;

// you can access the elements by hierarchical names:
m.elementAt(\play)
m.elementAt(\stop).value_(1)
m.elementAt(\bt)  // the group of 5 buttons
m.elementAt(\bt, 2).value_(1)  // one of them
m.elementAt(\sl).do(_.value_(1.0.rand))  // all sliders

// one can als access them by direct names:
m.elementsDict.at(\sl_1).action = { |sl| "yo slider: % > %\n".postf(sl.name, sl.value) };
m.elementAt(\sl, 1).valueAction_(1.0.rand);

m.free; // free m's resources and remove it from MKtl.all
::



section:: Finding descriptions for similar devices

Many devices already hace description files, which are used by the link::Classes/MKtlDesc:: class. They can be found here:
code::
MKtlDesc.openFolder;
::
You are cordially invited to contribute desc files for any devices you have and find useful!
For details on making descs for devices using MIDI, HID, or OSC, please read on here:

list::
##link::Tutorials/How_to_create_a_description_file_for_MIDI::
##link::Tutorials/How_to_create_a_description_file_for_HID::
##link::Tutorials/How_to_create_a_description_file_for_OSC::
::
