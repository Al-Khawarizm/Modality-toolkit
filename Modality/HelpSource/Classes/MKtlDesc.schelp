TITLE:: MKtlDesc
summary:: objects to store descriptions of MKtls
categories:: Overviews/Modality
related:: Classes/MKtl, Classes/MKtlElement



DESCRIPTION::
MKtlDesc can read files from its folders,
and convert them into MKtlDesc objects.

code::
MKtlDesc.folderName;
MKtlDesc.defaultFolder;
MKtlDesc.addFolder("~/scgit/");
MKtlDesc.descFolders;
MKtlDesc.openFolder(0);
MKtlDesc.openFolder(1);

MKtlDesc.loadDescs;
MKtlDesc.loadDescs("nano*");
MKtlDesc.loadDescs("nano*", folderIndex: 0);

MKtlDesc.allDescs.choose.dump;

// filename, no extension
MKtlDesc.findFile("nano*");
MKtlDesc.findFile("nanoKEY2");
MKtlDesc.makeShortName("nanoKEY2");

x = MKtlDesc.fromFile("nanoKEY2");
MKtlDesc.allDescs;
MKtlDesc.at('nnky2');
x.openFile;

x.descDict.keys;
x.protocol
x.device
x.desc
x.desc.keys
x.desc.at(\mod);
x.desc.at(\keyOff);

x.postInfo(elements: false)
x.postElementInfo

MKtlDesc.findDict('nnky2');
MKtlDesc.findDict("nanoKEY2");
MKtlDesc.findDict((description: ()));

::


CLASSMETHODS::

PRIVATE:: initClass

METHOD:: defaultFolder
the path where the folder for MKtlDesc files live.

METHOD:: folderName
the filename of the defaultFolder.

METHOD:: descFolders
all descFolders within which to look for MKtlDesc files.

METHOD:: addFolder
add a folder to descFolders

METHOD:: openFolder
open folder(s) in descFolders by index.

METHOD:: new
create an MKtlDesc from a well-formed description dictionary.
argument:: desc

METHOD:: at
access an MKtlDesc by name in the global repository

METHOD:: fromFile
create an MKtlDesc from a file.
ARGUMENT:: filename
filename without path or extension, will be looked for in descfolders.

METHOD:: fromDict
create an MKtlDesc from a well-formed description dict.

METHOD:: loadDescs
load all descriptions in descFolders.
only used for testing.

METHOD:: allDescs
all currently loaded descs

METHOD:: isValidDescDict
check whether dict is a valid description dict.

METHOD:: makeShortName
convert any string to a short name

METHOD:: findDict
find or create a dict from a symbol (lookup),
a string (load file) or a dict (remains itself).

METHOD:: findFile

INSTANCEMETHODS::

METHOD:: descDict
get MKtlDesc's properties, or set them from a dict

METHOD:: path
the path where file was read (if so)

METHOD:: shortName
the autogenerated shortname by which the desc is stored.

METHOD:: writeFile
not done yet - should eventually write a well-formed description file
at path based on its current data.

PRIVATE:: init, storeArgs, printOn

EXAMPLES::

code::
(some example code)
::