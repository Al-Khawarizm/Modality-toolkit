CLASS:: PKtl
summary:: access MKtl values in patterns
categories:: Modality, Streams-Patterns-Events>Patterns
related:: Classes/MKtl, Reference/UsingMKtlAndDispatch, etc.

DESCRIPTION::
This class gives you access to MKtl elements from a pattern.


CLASSMETHODS::

METHOD:: new
Create a PKtl pattern

argument:: mktl
The MKtl instance to take the values from.

argument:: elName
The element name(s) to access


INSTANCEMETHODS::

PRIVATE::mktl, elName, embedInStream, value

EXAMPLES::

code::
// create an MKtl which simulates the nanoKONTROL
n = MKtl.make(\nk1, 'nanoKONTROL');

// set some values that we will use in the pattern (normally you'd just move the sliders)
n.at( \sl1_1 ).rawValue_( 64 );
n.at( \sl1_2 ).rawValue_( 32 );

// create a pattern:
z = PKtl(MKtl(\nk1), \sl1_1, 5 );

// play it
Pdef(\mk, Pbind(\amp, z/4, \degree, 0, \dur, 0.25, \pos, [-1,1] ).trace).play;

// multichannel expansion:
z = PKtl(MKtl(\nk1), [\sl1_1, \sl1_2] );

Pdef(\mk, Pbind(\amp, z/4, \degree, [0,3], \dur, 0.25, \pos, [-1,1] ).trace).play;

// sequence the keys:
z = PKtl(MKtl(\nk1), Pseq( [\sl1_1, \sl1_2], inf ) );

Pdef(\mk, Pbind(\amp, z/4, \degree, Pseq([0,3], inf), \dur, 0.25, \pos, [-1,1] ).trace).play;
::